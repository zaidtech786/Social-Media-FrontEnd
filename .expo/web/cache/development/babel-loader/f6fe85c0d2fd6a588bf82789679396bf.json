{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createContext, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AuthContext = createContext({});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userToken = _useState4[0],\n      setUserToken = _useState4[1];\n\n  var loggedIn = function loggedIn() {\n    var navigation = useNavigation();\n    setIsLoading(false);\n    setUserToken(\"zaidboltechote\");\n    navigation.navigate(\"home\");\n  };\n\n  var loggedOut = function loggedOut() {\n    setIsLoading(false);\n    setUserToken(null);\n  };\n\n  return _jsx(AuthContext.Provider, {\n    value: {\n      loggedIn: loggedIn,\n      loggedOut: loggedOut,\n      userToken: userToken,\n      isLoading: isLoading\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["createContext","useState","useNavigation","AuthContext","AuthProvider","children","isLoading","setIsLoading","userToken","setUserToken","loggedIn","navigation","navigate","loggedOut"],"sources":["I:/ReactNative/social_media-app/screens/Context/useContext.js"],"sourcesContent":["import { createContext , useState} from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport const AuthContext=createContext({});\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [isLoading,setIsLoading] = useState(true);\r\n    const [userToken ,setUserToken]=useState(null);\r\n\r\n    \r\n    const loggedIn = () => {\r\n        const navigation=useNavigation()\r\n        setIsLoading(false);\r\n        setUserToken(\"zaidboltechote\");\r\n        navigation.navigate(\"home\");\r\n    }\r\n\r\n    const loggedOut = () => {\r\n        setIsLoading(false);\r\n        setUserToken(null);\r\n    }\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={{loggedIn,loggedOut,userToken,isLoading}}>\r\n          {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}"],"mappings":";AAAA,SAASA,aAAT,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,OAAO,IAAMC,WAAW,GAACH,aAAa,CAAC,EAAD,CAA/B;AAEP,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe,OAAgB;EAAA,IAAdC,QAAc,QAAdA,QAAc;;EACxC,gBAAiCJ,QAAQ,CAAC,IAAD,CAAzC;EAAA;EAAA,IAAOK,SAAP;EAAA,IAAiBC,YAAjB;;EACA,iBAAgCN,QAAQ,CAAC,IAAD,CAAxC;EAAA;EAAA,IAAOO,SAAP;EAAA,IAAkBC,YAAlB;;EAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACnB,IAAMC,UAAU,GAACT,aAAa,EAA9B;IACAK,YAAY,CAAC,KAAD,CAAZ;IACAE,YAAY,CAAC,gBAAD,CAAZ;IACAE,UAAU,CAACC,QAAX,CAAoB,MAApB;EACH,CALD;;EAOA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;IACpBN,YAAY,CAAC,KAAD,CAAZ;IACAE,YAAY,CAAC,IAAD,CAAZ;EACH,CAHD;;EAMA,OACI,KAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAACC,QAAQ,EAARA,QAAD;MAAUG,SAAS,EAATA,SAAV;MAAoBL,SAAS,EAATA,SAApB;MAA8BF,SAAS,EAATA;IAA9B,CAA7B;IAAA,UACGD;EADH,EADJ;AAKH,CAvBM"},"metadata":{},"sourceType":"module"}