{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Conversation from \"./Conversation\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { AuthContext } from \"./Context/useContext\";\nimport SearchIcon from \"@expo/vector-icons/Feather\";\nimport Times from \"@expo/vector-icons/FontAwesome\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Chats() {\n  var _useContext = useContext(AuthContext),\n      userId = _useContext.userId;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      conversations = _useState2[0],\n      setConversations = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filterData = _useState6[0],\n      setFilterData = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      users = _useState8[0],\n      setUsers = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currentChat = _useState10[0],\n      setCurrentChat = _useState10[1];\n\n  useEffect(function () {\n    var getConversations = function _callee() {\n      var res;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(\"http://192.168.0.106:5000/chat/getconversation/\" + userId));\n\n            case 3:\n              res = _context.sent;\n              console.log(res.data);\n              setConversations(res.data);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    getConversations();\n  }, [userId]);\n\n  var getData = function _callee2() {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            axios.get(\"http://192.168.0.106:5000/api/allusers\").then(function (res) {\n              setUsers(res.data.data);\n              console.log(res.data);\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var ClearData = function ClearData() {\n    setSearch(\"\");\n  };\n\n  var getSearchData = function getSearchData(val) {\n    var newData = users.filter(function (item) {\n      return item.name.toLowerCase().includes(search.toLowerCase());\n    });\n\n    if (search === \"\") {\n      setFilterData([]);\n    } else {\n      setFilterData(newData);\n    }\n  };\n\n  var navigation = useNavigation();\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: \"600\"\n        },\n        children: \"Messages\"\n      }), _jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(View, {\n          style: styles.inputGrp,\n          children: [search == \"\" ? _jsx(TouchableOpacity, {\n            children: _jsx(Text, {\n              children: _jsx(SearchIcon, {\n                name: \"search\",\n                size: 20,\n                style: {\n                  marginLeft: 10,\n                  textAlign: \"center\",\n                  marginTop: 3\n                }\n              })\n            })\n          }) : _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return ClearData();\n            },\n            children: _jsx(Text, {\n              children: _jsx(Times, {\n                name: \"times\",\n                size: 20,\n                style: {\n                  marginLeft: 10,\n                  textAlign: \"center\",\n                  marginTop: 3\n                }\n              })\n            })\n          }), _jsx(TextInput, {\n            placeholder: \"search\",\n            style: styles.search,\n            value: search,\n            onChangeText: function onChangeText(val) {\n              setSearch(val);\n              getSearchData();\n            }\n          })]\n        }), search ? _jsx(FlatList, {\n          data: filterData,\n          keyExtractor: function keyExtractor(item) {\n            return item._id;\n          },\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            console.log(item);\n            return _jsxs(View, {\n              style: styles.userProfile,\n              children: [_jsx(Image, {\n                source: {\n                  uri: item.profile == \"\" ? \"http://www.gravatar.com/avatar/?d=mp\" : item.profile\n                },\n                style: styles.profile\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return navigation.navigate(\"userprofile\", {\n                    Id: item._id\n                  });\n                },\n                children: _jsxs(View, {\n                  style: styles.nameUser,\n                  children: [_jsx(Text, {\n                    style: {\n                      fontWeight: \"500\"\n                    },\n                    children: item.userName\n                  }), _jsxs(Text, {\n                    style: {\n                      fontWeight: \"400\"\n                    },\n                    children: [\" \", item.name]\n                  })]\n                })\n              })]\n            });\n          }\n        }) : _jsx(Text, {})]\n      }), conversations.map(function (c) {\n        return _jsx(View, {\n          children: _jsx(Conversation, {\n            conversation: c,\n            currentUser: userId\n          })\n        }, c._id);\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 40,\n    marginLeft: 20\n  },\n  inputGrp: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\"\n  },\n  search: {\n    width: \"90%\",\n    borderWidth: 1,\n    paddingVertical: 7,\n    borderColor: \"#000\"\n  },\n  profile: {\n    width: 50,\n    height: 50,\n    borderRadius: 50,\n    borderWidth: 1,\n    borderColor: \"#000\"\n  },\n  userProfile: {\n    marginTop: 20,\n    marginHorizontal: 20,\n    flexDirection: \"row\"\n  },\n  nameUser: {\n    marginLeft: 10\n  }\n});","map":{"version":3,"names":["React","useContext","useEffect","useState","Conversation","useNavigation","AuthContext","SearchIcon","Times","axios","Chats","userId","conversations","setConversations","search","setSearch","filterData","setFilterData","users","setUsers","currentChat","setCurrentChat","getConversations","get","res","console","log","data","getData","then","ClearData","getSearchData","val","newData","filter","item","name","toLowerCase","includes","navigation","styles","container","fontSize","fontWeight","inputGrp","marginLeft","textAlign","marginTop","_id","userProfile","uri","profile","navigate","Id","nameUser","userName","map","c","StyleSheet","create","justifyContent","alignItems","flexDirection","width","borderWidth","paddingVertical","borderColor","height","borderRadius","marginHorizontal"],"sources":["I:/ReactNative/social_media-app/screens/Chats.js"],"sourcesContent":["import {\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Conversation from \"./Conversation\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { AuthContext } from \"./Context/useContext\";\r\nimport SearchIcon from \"react-native-vector-icons/Feather\";\r\nimport Times from \"react-native-vector-icons/FontAwesome\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Chats() {\r\n  const { userId } = useContext(AuthContext);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filterData, setFilterData] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getConversations = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          \"http://192.168.0.106:5000/chat/getconversation/\" + userId\r\n        );\r\n        console.log(res.data);\r\n        setConversations(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getConversations();\r\n  }, [userId]);\r\n\r\n  const getData = async () => {\r\n    axios.get(\"http://192.168.0.106:5000/api/allusers\").then((res) => {\r\n      setUsers(res.data.data);\r\n      console.log(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const ClearData = () => {\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const getSearchData = (val) => {\r\n    let newData = users.filter((item) => {\r\n      return item.name.toLowerCase().includes(search.toLowerCase());\r\n    });\r\n    if (search === \"\") {\r\n      setFilterData([]);\r\n    } else {\r\n      setFilterData(newData);\r\n    }\r\n  };\r\n\r\n  const navigation = useNavigation();\r\n  return (\r\n    <View>\r\n      <View style={styles.container}>\r\n        <Text style={{ fontSize: 20, fontWeight: \"600\" }}>Messages</Text>\r\n\r\n        <View style={styles.container}>\r\n          <View style={styles.inputGrp}>\r\n            {search == \"\" ? (\r\n              <TouchableOpacity>\r\n                <Text>\r\n                  <SearchIcon\r\n                    name=\"search\"\r\n                    size={20}\r\n                    style={{\r\n                      marginLeft: 10,\r\n                      textAlign: \"center\",\r\n                      marginTop: 3,\r\n                    }}\r\n                  />\r\n                </Text>\r\n              </TouchableOpacity>\r\n            ) : (\r\n              <TouchableOpacity onPress={() => ClearData()}>\r\n                <Text>\r\n                  <Times\r\n                    name=\"times\"\r\n                    size={20}\r\n                    style={{\r\n                      marginLeft: 10,\r\n                      textAlign: \"center\",\r\n                      marginTop: 3,\r\n                    }}\r\n                  />\r\n                </Text>\r\n              </TouchableOpacity>\r\n            )}\r\n\r\n            <TextInput\r\n              placeholder=\"search\"\r\n              style={styles.search}\r\n              value={search}\r\n              onChangeText={(val) => {\r\n                setSearch(val);\r\n                getSearchData();\r\n              }}\r\n            />\r\n          </View>\r\n\r\n          {search ? (\r\n            <FlatList\r\n              data={filterData}\r\n              keyExtractor={(item) => item._id}\r\n              renderItem={({ item }) => {\r\n                console.log(item);\r\n                return (\r\n                  <View style={styles.userProfile}>\r\n                    <Image\r\n                      source={{\r\n                        uri:\r\n                          item.profile == \"\"\r\n                            ? \"http://www.gravatar.com/avatar/?d=mp\"\r\n                            : item.profile,\r\n                      }}\r\n                      style={styles.profile}\r\n                    />\r\n                    <TouchableOpacity\r\n                      onPress={() =>\r\n                        navigation.navigate(\"userprofile\", {\r\n                          Id: item._id,\r\n                        })\r\n                      }\r\n                    >\r\n                      <View style={styles.nameUser}>\r\n                        <Text style={{ fontWeight: \"500\" }}>\r\n                          {item.userName}\r\n                        </Text>\r\n                        <Text style={{ fontWeight: \"400\" }}> {item.name}</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                );\r\n              }}\r\n            />\r\n          ) : (\r\n            <Text></Text>\r\n          )}\r\n        </View>\r\n\r\n        {conversations.map((c) => (\r\n          <View key={c._id}>\r\n            <Conversation conversation={c} currentUser={userId} />\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 40,\r\n    marginLeft: 20,\r\n  },\r\n  inputGrp: {\r\n    // width: \"80%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n  search: {\r\n    width: \"90%\",\r\n    borderWidth: 1,\r\n    paddingVertical: 7,\r\n    borderColor: \"#000\",\r\n  },\r\n\r\n  profile: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n    borderWidth: 1,\r\n    borderColor: \"#000\",\r\n  },\r\n  userProfile: {\r\n    marginTop: 20,\r\n    marginHorizontal: 20,\r\n    flexDirection: \"row\",\r\n  },\r\n  nameUser: {\r\n    marginLeft: 10,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}