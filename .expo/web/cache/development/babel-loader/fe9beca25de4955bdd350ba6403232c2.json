{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["I:/ReactNative/social_media-app/screens/SignUp.js"],"sourcesContent":["// import {\r\n//   styleSheet,\r\n//   Text,\r\n//   View,\r\n//   Button,\r\n//   TextInput,\r\n//   TouchableOpacity,\r\n//   ActivityIndicator,\r\n//   Alert,\r\n// } from \"react-native\";\r\n// import React, { useState } from \"react\";\r\n// import Icons from \"react-native-vector-icons/FontAwesome\";\r\n// import Eye from \"react-native-vector-icons/FontAwesome5\";\r\n// import Camera from \"react-native-vector-icons/AntDesign\";\r\n// import Email from \"react-native-vector-icons/MaterialCommunityIcons\";\r\n// import { useNavigation } from \"@react-navigation/native\";\r\n// import * as ImagePicker from \"expo-image-picker\";\r\n// import axios from \"axios\";\r\n// import { Formik } from \"formik\";\r\n// import * as Yup from \"yup\";\r\n\r\n// export default function SignUp() {\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [name, setName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"\");\r\n//   const [show, setShow] = useState(false);\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const navigation = useNavigation();\r\n//   const SignupSchema = Yup.object().shape({\r\n//     username: Yup.string()\r\n//       .min(4, \"too\")\r\n//       .max(20)\r\n//       .required(\"Please Enter Username\"),\r\n//     name: Yup.string().min(7).max(20).required(\"Please Enter Name\"),\r\n//     email: Yup.string().email(\"Invalid email\").required(\"Please Enter Email\"),\r\n//     password: Yup.string()\r\n//       .min(8)\r\n//       .required(\"Please Enter password\")\r\n//       .matches(\r\n//         /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/,\r\n//         \"Password must be strong\"\r\n//       ),\r\n//     conPassword: Yup.string()\r\n//       .min(8)\r\n//       .oneOf([Yup.ref(\"password\")], \"Your Password do not match.\")\r\n//       .required(\"Confirm password is required\"),\r\n//   });\r\n\r\n//   const pickImage = async () => {\r\n//     let data = await ImagePicker.launchImageLibraryAsync({\r\n//       mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n//       allowsEditing: true,\r\n//       aspect: [1, 1],\r\n//       quality: 0.5,\r\n//     });\r\n//     if (!data.cancelled) {\r\n//       handleUpload(data.uri);\r\n//     }\r\n//   };\r\n\r\n//   const handleUpload = (image) => {\r\n//     const data = new FormData();\r\n//     data.append(\"file\", image);\r\n//     data.append(\"upload_preset\", \"Social-Media-App\");\r\n//     data.append(\"cloud_name\", \"abhinhibanaya-com\");\r\n\r\n//     fetch(\"http://api.cloudinary.com/v1_1/abhinhibanaya-com/image/upload\", {\r\n//       method: \"post\",\r\n//       body: data,\r\n//     })\r\n//       .then((res) => res.json())\r\n//       .then((data) => setProfile(data.url));\r\n//   };\r\n\r\n//   const PostData = () => {\r\n//     setLoading(true);\r\n//     axios\r\n//       .post(\"http://192.168.0.106:5000/api/signup\", {\r\n//         username,\r\n//         name,\r\n//         email,\r\n//         password,\r\n//         confirmPassword,\r\n//         profile,\r\n//       })\r\n//       .then((res) => {\r\n//         console.log(res);\r\n//         // alert(res.data.message);\r\n//         navigation.navigate(\"login\");\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//       });\r\n//     setLoading(false);\r\n//   };\r\n\r\n//   return (\r\n//     <View>\r\n//       <View style={styles.Wrapper}>\r\n//         <View style={styles.container}>\r\n//           <Text style={styles.logo}>Chattify</Text>\r\n\r\n//           <Formik\r\n//             initialValues={{\r\n//               username: \"\",\r\n//               name: \"\",\r\n//               email: \"\",\r\n//               password: \"\",\r\n//               confirmPassword: \"\",\r\n//               profile: \"\",\r\n//             }}\r\n//             validationSchema={SignupSchema}\r\n//           >\r\n//             {({\r\n//               values,\r\n//               errors,\r\n//               touched,\r\n//               handleSubmit,\r\n//               handleChange,\r\n//               setFieldTouched,\r\n//               isValid,\r\n//             }) => (\r\n//               <View style={styles.inputContainer}>\r\n//                 <Text style={styles.label}>Enter Username </Text>\r\n//                 <View style={styles.inputGroup}>\r\n//                   <Text style={styles.icon}>\r\n//                     <Eye name=\"user\" size={15} color={\"black\"} />\r\n//                   </Text>\r\n//                   <TextInput\r\n//                     style={styles.input}\r\n//                     placeholder=\"Username\"\r\n//                     value={values.username}\r\n//                     onChangeText={handleChange(\"username\")}\r\n//                     onBlur={() => setFieldTouched(\"username\")}\r\n//                   />\r\n//                   {touched.username && errors.username && (\r\n//                     <Text style={{ color: red, fontWeight: \"500\" }}>\r\n//                       {errors.username}\r\n//                     </Text>\r\n//                   )}\r\n//                 </View>\r\n\r\n//                 <Text style={styles.label}>Enter Name </Text>\r\n//                 <View style={styles.inputGroup}>\r\n//                   <Text style={styles.icon}>\r\n//                     <Eye name=\"user\" size={15} color={\"black\"} />\r\n//                   </Text>\r\n//                   <TextInput\r\n//                     style={styles.input}\r\n//                     placeholder=\"Enter Name\"\r\n//                     value={values.name}\r\n//                     onChangeText={handleChange(\"name\")}\r\n//                     onBlur={() => setFieldTouched(\"name\")}\r\n//                   />\r\n//                   {touched.name && errors.name && (\r\n//                     <Text style={{ color: red, fontWeight: \"500\" }}>\r\n//                       {errors.name}\r\n//                     </Text>\r\n//                   )}\r\n//                 </View>\r\n\r\n//                 <Text>Enter Email</Text>\r\n//                 <View style={styles.inputGroup}>\r\n//                   <Text style={styles.icon}>\r\n//                     <Email name=\"email\" size={15} color={\"black\"} />\r\n//                   </Text>\r\n//                   <TextInput\r\n//                     style={styles.input}\r\n//                     placeholder=\"xyz@gmail.com\"\r\n//                     keyboardType=\"email-address\"\r\n//                     value={values.email}\r\n//                     onChangeText={handleChange(\"email\")}\r\n//                     onBlur={() => setFieldTouched(\"email\")}\r\n//                   />\r\n//                   {touched.email && errors.email && (\r\n//                     <Text\r\n//                       style={{ color: \"red\", fontWeight: \"500\", fontSize: 20 }}\r\n//                     >\r\n//                       {errors.email}\r\n//                     </Text>\r\n//                   )}\r\n//                 </View>\r\n\r\n//                 <Text style={styles.label}>Enter Password</Text>\r\n//                 <View style={styles.inputGroup}>\r\n//                   <TouchableOpacity onPress={() => setShow(true)}>\r\n//                     <Eye\r\n//                       name={show ? \"eye\" : \"eye-slash\"}\r\n//                       style={styles.icon}\r\n//                       size={15}\r\n//                       color={\"black\"}\r\n//                     />\r\n//                   </TouchableOpacity>\r\n\r\n//                   <TextInput\r\n//                     style={styles.input}\r\n//                     secureTextEntry={show ? false : true}\r\n//                     placeholder=\"Password\"\r\n//                     value={values.password}\r\n//                     onChangeText={handleChange(\"password\")}\r\n//                     onBlur={() => setFieldTouched(\"password\")}\r\n//                   />\r\n//                   {touched.password && errors.password && (\r\n//                     <Text style={{ color: red, fontWeight: \"500\" }}>\r\n//                       {errors.password}\r\n//                     </Text>\r\n//                   )}\r\n//                 </View>\r\n\r\n//                 <Text style={styles.label}>Confirm Password</Text>\r\n//                 <View style={styles.inputGroup}>\r\n//                   <TouchableOpacity onPress={() => setShow(true)}>\r\n//                     <Eye\r\n//                       name={show ? \"eye\" : \"eye-slash\"}\r\n//                       style={styles.icon}\r\n//                       size={15}\r\n//                       color={\"black\"}\r\n//                     />\r\n//                   </TouchableOpacity>\r\n//                   <TextInput\r\n//                     style={styles.input}\r\n//                     secureTextEntry={show ? false : true}\r\n//                     placeholder=\"Confirm Password\"\r\n//                     value={values.confirmPassword}\r\n//                     onChangeText={handleChange(\"confirmPassword\")}\r\n//                     onBlur={() => setFieldTouched(\"confirmPassword\")}\r\n//                   />\r\n//                   {touched.confirmPassword && errors.confirmPassword && (\r\n//                     <Text style={{ color: red, fontWeight: \"500\" }}>\r\n//                       {errors.confirmPassword}\r\n//                     </Text>\r\n//                   )}\r\n//                 </View>\r\n\r\n//                 <View\r\n//                   style={{\r\n//                     borderWidth: 1,\r\n//                     borderColor: \"#000\",\r\n//                     paddingVertical: 10,\r\n//                     paddingHorizontal: 10,\r\n//                     borderRadius: 10,\r\n//                     marginBottom: 10,\r\n//                   }}\r\n//                 >\r\n//                   <TouchableOpacity onPress={() => pickImage()}>\r\n//                     <View\r\n//                       style={{\r\n//                         flexDirection: \"row\",\r\n//                         justifyContent: \"space-between\",\r\n//                       }}\r\n//                     >\r\n//                       <Text>Upload Profile Pic</Text>\r\n//                       <Text>\r\n//                         <Camera\r\n//                           name={profile == \"\" ? \"camera\" : \"checkcircle\"}\r\n//                           size={20}\r\n//                         />\r\n//                       </Text>\r\n//                     </View>\r\n//                   </TouchableOpacity>\r\n//                 </View>\r\n\r\n//                 <TouchableOpacity onPress={() => PostData()} style={styles.btn}>\r\n//                   <Text style={{ alignSelf: \"center\" }}>\r\n//                     {loading ? (\r\n//                       <View>\r\n//                         <Text>\r\n//                           <ActivityIndicator size=\"small\" color=\"#000\" />\r\n//                         </Text>\r\n//                       </View>\r\n//                     ) : (\r\n//                       <Text style={{ fontWeight: \"500\" }}>Sign Up</Text>\r\n//                     )}\r\n//                   </Text>\r\n//                 </TouchableOpacity>\r\n//               </View>\r\n//             )}\r\n//           </Formik>\r\n\r\n//           <View style={styles.lastContainer}>\r\n//             <Text style={styles.signup}>\r\n//               Already have an account?\r\n//               <Text\r\n//                 style={{\r\n//                   fontWeight: \"bold\",\r\n//                   borderBottomWidth: 1,\r\n//                   borderColor: \"#000\",\r\n//                 }}\r\n//                 onPress={() => navigation.navigate(\"login\")}\r\n//               >\r\n//                 Sign in\r\n//               </Text>\r\n//             </Text>\r\n//           </View>\r\n//         </View>\r\n//       </View>\r\n//     </View>\r\n//   );\r\n// }\r\n\r\n// const styles = styleSheet.create({\r\n//   Wrapper: {\r\n//     width: \"100%\",\r\n//     height: \"100%\",\r\n//     backgroundColor: \"#f1c40f\",\r\n//   },\r\n//   container: {\r\n//     marginTop: 150,\r\n//   },\r\n//   logo: {\r\n//     textAlign: \"center\",\r\n//     fontSize: 35,\r\n//     marginBottom: 30,\r\n//   },\r\n//   inputContainer: {\r\n//     marginHorizontal: 30,\r\n//   },\r\n//   input: {\r\n//     borderWidth: 1,\r\n//     borderColor: \"black\",\r\n//     borderRadius: 7,\r\n//     paddingVertical: 6,\r\n//     paddingHorizontal: 10,\r\n//     // marginBottom: 20,\r\n//     color: \"#000\",\r\n//     fontSize: 15,\r\n//   },\r\n//   label: {\r\n//     marginBottom: 5,\r\n//   },\r\n//   bottomView: {\r\n//     justifyContent: \"center\",\r\n//     alignItems: \"center\",\r\n//     marginTop: 20,\r\n//   },\r\n//   Or: {\r\n//     marginTop: 10,\r\n//   },\r\n//   btn: {\r\n//     borderWidth: 1,\r\n//     paddingVertical: 8,\r\n//     paddingHorizontal: 80,\r\n//     backgroundColor: \"#f1c40f\",\r\n//     borderRadius: 10,\r\n//   },\r\n//   lastContainer: {\r\n//     display: \"flex\",\r\n//     marginTop: 20,\r\n//     alignItems: \"center\",\r\n//     borderTopWidth: 1,\r\n//     marginHorizontal: 30,\r\n//     borderColor: \"#000\",\r\n//   },\r\n//   inputGroup: {\r\n//     position: \"relative\",\r\n//   },\r\n//   icon: {\r\n//     position: \"absolute\",\r\n//     right: 15,\r\n//     top: 15,\r\n//   },\r\n// });\r\n"],"mappings":""},"metadata":{},"sourceType":"script"}