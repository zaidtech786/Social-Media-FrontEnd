{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React, { useState } from \"react\";\nimport Icons from \"@expo/vector-icons/FontAwesome\";\nimport Eye from \"@expo/vector-icons/FontAwesome5\";\nimport Camera from \"@expo/vector-icons/AntDesign\";\nimport Email from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport axios from \"axios\";\nimport { Formik, useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignUp() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      profile = _useState2[0],\n      setProfile = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var navigation = useNavigation();\n  var SignupSchema = Yup.object().shape({\n    username: Yup.string().min(4).max(20).required(\"Please Enter Username\"),\n    name: Yup.string().min(7).max(20).required(\"Please Enter Name\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Please Enter Email\"),\n    password: Yup.string().min(8).required(\"Please Enter password\").matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/, \"Password must be strong\"),\n    confirmPassword: Yup.string().min(8).oneOf([Yup.ref(\"password\")], \"Your Password do not match.\").required(\"Confirm password is required\")\n  });\n\n  var pickImage = function _callee() {\n    var data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 0.5\n            }));\n\n          case 2:\n            data = _context.sent;\n\n            if (!data.cancelled) {\n              handleUpload(data.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleUpload = function handleUpload(image) {\n    var data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"Social-Media-App\");\n    data.append(\"cloud_name\", \"abhinhibanaya-com\");\n    fetch(\"http://api.cloudinary.com/v1_1/abhinhibanaya-com/image/upload\", {\n      method: \"post\",\n      body: data\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return setProfile(data.url);\n    });\n  };\n\n  var initialValues = {\n    username: \"\",\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  };\n\n  var _useFormik = useFormik({\n    initialValues: initialValues,\n    validationSchema: SignupSchema,\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n    }\n  }),\n      values = _useFormik.values,\n      errors = _useFormik.errors,\n      touched = _useFormik.touched,\n      handleSubmit = _useFormik.handleSubmit,\n      handleChange = _useFormik.handleChange,\n      setFieldTouched = _useFormik.setFieldTouched,\n      isValid = _useFormik.isValid;\n\n  console.log(Formik);\n\n  var postData = function postData() {\n    console.log(values.username, values.name, values.email, values.password, values.confirmPassword, values.profile);\n    setLoading(true);\n    setLoading(false);\n  };\n\n  return _jsx(View, {\n    children: _jsx(View, {\n      style: styles.Wrapper,\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: styles.logo,\n          children: \"Chattify\"\n        }), _jsxs(View, {\n          style: styles.inputContainer,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Enter Username \"\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(Text, {\n              style: styles.icon,\n              children: _jsx(Eye, {\n                name: \"user\",\n                size: 15,\n                color: \"black\"\n              })\n            }), _jsx(TextInput, {\n              style: styles.input,\n              placeholder: \"Username\",\n              name: \"username\",\n              value: values.username,\n              onChangeText: handleChange(\"username\"),\n              onBlur: function onBlur() {\n                return setFieldTouched(\"username\");\n              }\n            }), touched.username && errors.username && _jsx(Text, {\n              style: {\n                color: \"red\",\n                fontWeight: \"500\",\n                marginBottom: 5\n              },\n              children: \"***\" + errors.username\n            })]\n          }), _jsx(Text, {\n            style: styles.label,\n            children: \"Enter Name \"\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(Text, {\n              style: styles.icon,\n              children: _jsx(Eye, {\n                name: \"user\",\n                size: 15,\n                color: \"black\"\n              })\n            }), _jsx(TextInput, {\n              style: styles.input,\n              placeholder: \"Enter Name\",\n              name: \"name\",\n              value: values.name,\n              onChangeText: handleChange(\"name\"),\n              onBlur: function onBlur() {\n                return setFieldTouched(\"name\");\n              }\n            }), touched.name && errors.name && _jsx(Text, {\n              style: {\n                color: \"red\",\n                fontWeight: \"500\",\n                marginBottom: 5\n              },\n              children: \"***\" + errors.name\n            })]\n          }), _jsx(Text, {\n            children: \"Enter Email\"\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(Text, {\n              style: styles.icon,\n              children: _jsx(Email, {\n                name: \"email\",\n                size: 15,\n                color: \"black\"\n              })\n            }), _jsx(TextInput, {\n              style: styles.input,\n              placeholder: \"xyz@gmail.com\",\n              keyboardType: \"email-address\",\n              name: \"email\",\n              value: values.email,\n              onChangeText: handleChange(\"email\"),\n              onBlur: function onBlur() {\n                return setFieldTouched(\"email\");\n              }\n            }), touched.email && errors.email && _jsx(Text, {\n              style: {\n                color: \"red\",\n                fontWeight: \"500\",\n                marginBottom: 5\n              },\n              children: \"***\" + errors.email\n            })]\n          }), _jsx(Text, {\n            style: styles.label,\n            children: \"Enter Password\"\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setShow(true);\n              },\n              children: _jsx(Eye, {\n                name: show ? \"eye\" : \"eye-slash\",\n                style: styles.icon,\n                size: 15,\n                color: \"black\"\n              })\n            }), _jsx(TextInput, {\n              style: styles.input,\n              secureTextEntry: show ? false : true,\n              placeholder: \"Password\",\n              name: \"password\",\n              value: values.password,\n              onChangeText: handleChange(\"password\"),\n              onBlur: function onBlur() {\n                return setFieldTouched(\"password\");\n              }\n            }), touched.password && errors.password && _jsx(Text, {\n              style: {\n                color: \"red\",\n                fontWeight: \"500\",\n                marginBottom: 5\n              },\n              children: \"***\" + errors.password\n            })]\n          }), _jsx(Text, {\n            style: styles.label,\n            children: \"Confirm Password\"\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setShow(true);\n              },\n              children: _jsx(Eye, {\n                name: show ? \"eye\" : \"eye-slash\",\n                style: styles.icon,\n                size: 15,\n                color: \"black\"\n              })\n            }), _jsx(TextInput, {\n              style: styles.input,\n              secureTextEntry: show ? false : true,\n              placeholder: \"Confirm Password\",\n              name: \"confirmPassword\",\n              value: values.confirmPassword,\n              onChangeText: handleChange(\"confirmPassword\"),\n              onBlur: function onBlur() {\n                return setFieldTouched(\"confirmPassword\");\n              }\n            }), touched.confirmPassword && errors.confirmPassword && _jsx(Text, {\n              style: {\n                color: \"red\",\n                fontWeight: \"500\",\n                marginBottom: 5\n              },\n              children: \"***\" + errors.confirmPassword\n            })]\n          }), _jsx(View, {\n            style: {\n              borderWidth: 1,\n              borderColor: \"#000\",\n              paddingVertical: 10,\n              paddingHorizontal: 10,\n              borderRadius: 10,\n              marginBottom: 10\n            },\n            children: _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return pickImage();\n              },\n              children: _jsxs(View, {\n                style: {\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\"\n                },\n                children: [_jsx(Text, {\n                  children: \"Upload Profile Pic\"\n                }), _jsx(Text, {\n                  children: _jsx(Camera, {\n                    name: profile == \"\" ? \"camera\" : \"checkcircle\",\n                    size: 20\n                  })\n                })]\n              })\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return handleSubmit();\n            },\n            style: styles.btn,\n            children: _jsx(Text, {\n              style: {\n                alignSelf: \"center\"\n              },\n              children: loading ? _jsx(View, {\n                children: _jsx(Text, {\n                  children: _jsx(ActivityIndicator, {\n                    size: \"small\",\n                    color: \"#000\"\n                  })\n                })\n              }) : _jsx(Text, {\n                style: {\n                  fontWeight: \"500\"\n                },\n                children: \"Sign Up\"\n              })\n            })\n          })]\n        }), _jsx(View, {\n          style: styles.lastContainer,\n          children: _jsxs(Text, {\n            style: styles.signup,\n            children: [\"Already have an account?\", _jsx(Text, {\n              style: {\n                fontWeight: \"bold\",\n                borderBottomWidth: 1,\n                borderColor: \"#000\"\n              },\n              onPress: function onPress() {\n                return navigation.navigate(\"login\");\n              },\n              children: \"Sign in\"\n            })]\n          })\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  Wrapper: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#f1c40f\"\n  },\n  container: {\n    marginTop: 150\n  },\n  logo: {\n    textAlign: \"center\",\n    fontSize: 35,\n    marginBottom: 30\n  },\n  inputContainer: {\n    marginHorizontal: 30,\n    color: \"#000\"\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: \"black\",\n    borderRadius: 7,\n    paddingVertical: 6,\n    paddingHorizontal: 10,\n    color: \"black\",\n    fontSize: 15\n  },\n  label: {\n    marginBottom: 5\n  },\n  bottomView: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  Or: {\n    marginTop: 10\n  },\n  btn: {\n    borderWidth: 1,\n    paddingVertical: 8,\n    paddingHorizontal: 80,\n    backgroundColor: \"#f1c40f\",\n    borderRadius: 10\n  },\n  lastContainer: {\n    display: \"flex\",\n    marginTop: 20,\n    alignItems: \"center\",\n    borderTopWidth: 1,\n    marginHorizontal: 30,\n    borderColor: \"#000\"\n  },\n  inputGroup: {\n    position: \"relative\",\n    marginBottom: 10,\n    color: \"#000\"\n  },\n  icon: {\n    position: \"absolute\",\n    right: 15,\n    top: 15\n  }\n});","map":{"version":3,"names":["React","useState","Icons","Eye","Camera","Email","useNavigation","ImagePicker","axios","Formik","useFormik","Yup","SignUp","profile","setProfile","show","setShow","loading","setLoading","navigation","SignupSchema","object","shape","username","string","min","max","required","name","email","password","matches","confirmPassword","oneOf","ref","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","data","cancelled","handleUpload","uri","image","FormData","append","fetch","method","body","then","res","json","url","initialValues","validationSchema","onSubmit","values","console","log","errors","touched","handleSubmit","handleChange","setFieldTouched","isValid","postData","styles","Wrapper","container","logo","inputContainer","label","inputGroup","icon","input","color","fontWeight","marginBottom","borderWidth","borderColor","paddingVertical","paddingHorizontal","borderRadius","flexDirection","justifyContent","btn","alignSelf","lastContainer","signup","borderBottomWidth","navigate","StyleSheet","create","width","height","backgroundColor","marginTop","textAlign","fontSize","marginHorizontal","bottomView","alignItems","Or","display","borderTopWidth","position","right","top"],"sources":["I:/ReactNative/social_media-app/screens/SignUp.js"],"sourcesContent":["import {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Button,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  Alert,\r\n} from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport Icons from \"react-native-vector-icons/FontAwesome\";\r\nimport Eye from \"react-native-vector-icons/FontAwesome5\";\r\nimport Camera from \"react-native-vector-icons/AntDesign\";\r\nimport Email from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport axios from \"axios\";\r\nimport { Formik, useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nexport default function SignUp() {\r\n  // const [username, setUsername] = useState(\"\");\r\n  // const [name, setName] = useState(\"\");\r\n  // const [email, setEmail] = useState(\"\");\r\n  // const [password, setPassword] = useState(\"\");\r\n  // const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [profile, setProfile] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const SignupSchema = Yup.object().shape({\r\n    username: Yup.string().min(4).max(20).required(\"Please Enter Username\"),\r\n    name: Yup.string().min(7).max(20).required(\"Please Enter Name\"),\r\n    email: Yup.string().email(\"Invalid email\").required(\"Please Enter Email\"),\r\n    password: Yup.string()\r\n      .min(8)\r\n      .required(\"Please Enter password\")\r\n      .matches(\r\n        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/,\r\n        \"Password must be strong\"\r\n      ),\r\n    confirmPassword: Yup.string()\r\n      .min(8)\r\n      .oneOf([Yup.ref(\"password\")], \"Your Password do not match.\")\r\n      .required(\"Confirm password is required\"),\r\n  });\r\n\r\n  const pickImage = async () => {\r\n    let data = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [1, 1],\r\n      quality: 0.5,\r\n    });\r\n    if (!data.cancelled) {\r\n      handleUpload(data.uri);\r\n    }\r\n  };\r\n\r\n  const handleUpload = (image) => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"Social-Media-App\");\r\n    data.append(\"cloud_name\", \"abhinhibanaya-com\");\r\n\r\n    fetch(\"http://api.cloudinary.com/v1_1/abhinhibanaya-com/image/upload\", {\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setProfile(data.url));\r\n  };\r\n\r\n  const initialValues = {\r\n    username: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleSubmit,\r\n    handleChange,\r\n    setFieldTouched,\r\n    isValid,\r\n  } = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: SignupSchema,\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n    },\r\n  });\r\n  console.log(Formik);\r\n\r\n  const postData = () => {\r\n    console.log(\r\n      values.username,\r\n      values.name,\r\n      values.email,\r\n      values.password,\r\n      values.confirmPassword,\r\n      values.profile\r\n    );\r\n    setLoading(true);\r\n    // axios\r\n    //   .post(\"http://192.168.0.106:5000/api/signup\", {\r\n    //     username,\r\n    //     name,\r\n    //     email,\r\n    //     password,\r\n    //     confirmPassword,\r\n    //     profile,\r\n    //   })\r\n    //   .then((res) => {\r\n    //     console.log(res);\r\n    //     // alert(res.data.message);\r\n    //     navigation.navigate(\"login\");\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <View style={styles.Wrapper}>\r\n        <View style={styles.container}>\r\n          <Text style={styles.logo}>Chattify</Text>\r\n          <View style={styles.inputContainer}>\r\n            <Text style={styles.label}>Enter Username </Text>\r\n            <View style={styles.inputGroup}>\r\n              <Text style={styles.icon}>\r\n                <Eye name=\"user\" size={15} color={\"black\"} />\r\n              </Text>\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Username\"\r\n                name=\"username\"\r\n                value={values.username}\r\n                onChangeText={handleChange(\"username\")}\r\n                onBlur={() => setFieldTouched(\"username\")}\r\n              />\r\n              {touched.username && errors.username && (\r\n                <Text\r\n                  style={{\r\n                    color: \"red\",\r\n                    fontWeight: \"500\",\r\n                    marginBottom: 5,\r\n                  }}\r\n                >\r\n                  {\"***\" + errors.username}\r\n                </Text>\r\n              )}\r\n            </View>\r\n\r\n            <Text style={styles.label}>Enter Name </Text>\r\n            <View style={styles.inputGroup}>\r\n              <Text style={styles.icon}>\r\n                <Eye name=\"user\" size={15} color={\"black\"} />\r\n              </Text>\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Enter Name\"\r\n                name=\"name\"\r\n                value={values.name}\r\n                onChangeText={handleChange(\"name\")}\r\n                onBlur={() => setFieldTouched(\"name\")}\r\n              />\r\n              {touched.name && errors.name && (\r\n                <Text\r\n                  style={{\r\n                    color: \"red\",\r\n                    fontWeight: \"500\",\r\n                    marginBottom: 5,\r\n                  }}\r\n                >\r\n                  {\"***\" + errors.name}\r\n                </Text>\r\n              )}\r\n            </View>\r\n\r\n            <Text>Enter Email</Text>\r\n            <View style={styles.inputGroup}>\r\n              <Text style={styles.icon}>\r\n                <Email name=\"email\" size={15} color={\"black\"} />\r\n              </Text>\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"xyz@gmail.com\"\r\n                keyboardType=\"email-address\"\r\n                name=\"email\"\r\n                value={values.email}\r\n                onChangeText={handleChange(\"email\")}\r\n                onBlur={() => setFieldTouched(\"email\")}\r\n              />\r\n              {touched.email && errors.email && (\r\n                <Text\r\n                  style={{\r\n                    color: \"red\",\r\n                    fontWeight: \"500\",\r\n                    marginBottom: 5,\r\n                  }}\r\n                >\r\n                  {\"***\" + errors.email}\r\n                </Text>\r\n              )}\r\n            </View>\r\n\r\n            <Text style={styles.label}>Enter Password</Text>\r\n            <View style={styles.inputGroup}>\r\n              <TouchableOpacity onPress={() => setShow(true)}>\r\n                <Eye\r\n                  name={show ? \"eye\" : \"eye-slash\"}\r\n                  style={styles.icon}\r\n                  size={15}\r\n                  color={\"black\"}\r\n                />\r\n              </TouchableOpacity>\r\n\r\n              <TextInput\r\n                style={styles.input}\r\n                secureTextEntry={show ? false : true}\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                value={values.password}\r\n                onChangeText={handleChange(\"password\")}\r\n                onBlur={() => setFieldTouched(\"password\")}\r\n              />\r\n              {touched.password && errors.password && (\r\n                <Text\r\n                  style={{\r\n                    color: \"red\",\r\n                    fontWeight: \"500\",\r\n                    marginBottom: 5,\r\n                  }}\r\n                >\r\n                  {\"***\" + errors.password}\r\n                </Text>\r\n              )}\r\n            </View>\r\n\r\n            <Text style={styles.label}>Confirm Password</Text>\r\n            <View style={styles.inputGroup}>\r\n              <TouchableOpacity onPress={() => setShow(true)}>\r\n                <Eye\r\n                  name={show ? \"eye\" : \"eye-slash\"}\r\n                  style={styles.icon}\r\n                  size={15}\r\n                  color={\"black\"}\r\n                />\r\n              </TouchableOpacity>\r\n              <TextInput\r\n                style={styles.input}\r\n                secureTextEntry={show ? false : true}\r\n                placeholder=\"Confirm Password\"\r\n                name=\"confirmPassword\"\r\n                value={values.confirmPassword}\r\n                onChangeText={handleChange(\"confirmPassword\")}\r\n                onBlur={() => setFieldTouched(\"confirmPassword\")}\r\n              />\r\n              {touched.confirmPassword && errors.confirmPassword && (\r\n                <Text\r\n                  style={{\r\n                    color: \"red\",\r\n                    fontWeight: \"500\",\r\n                    marginBottom: 5,\r\n                  }}\r\n                >\r\n                  {\"***\" + errors.confirmPassword}\r\n                </Text>\r\n              )}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                borderWidth: 1,\r\n                borderColor: \"#000\",\r\n                paddingVertical: 10,\r\n                paddingHorizontal: 10,\r\n                borderRadius: 10,\r\n                marginBottom: 10,\r\n              }}\r\n            >\r\n              <TouchableOpacity onPress={() => pickImage()}>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <Text>Upload Profile Pic</Text>\r\n                  <Text>\r\n                    <Camera\r\n                      name={profile == \"\" ? \"camera\" : \"checkcircle\"}\r\n                      size={20}\r\n                    />\r\n                  </Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            <TouchableOpacity onPress={() => handleSubmit()} style={styles.btn}>\r\n              <Text style={{ alignSelf: \"center\" }}>\r\n                {loading ? (\r\n                  <View>\r\n                    <Text>\r\n                      <ActivityIndicator size=\"small\" color=\"#000\" />\r\n                    </Text>\r\n                  </View>\r\n                ) : (\r\n                  <Text style={{ fontWeight: \"500\" }}>Sign Up</Text>\r\n                )}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <View style={styles.lastContainer}>\r\n            <Text style={styles.signup}>\r\n              Already have an account?\r\n              <Text\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  borderBottomWidth: 1,\r\n                  borderColor: \"#000\",\r\n                }}\r\n                onPress={() => navigation.navigate(\"login\")}\r\n              >\r\n                Sign in\r\n              </Text>\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  Wrapper: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#f1c40f\",\r\n  },\r\n  container: {\r\n    marginTop: 150,\r\n  },\r\n  logo: {\r\n    textAlign: \"center\",\r\n    fontSize: 35,\r\n    marginBottom: 30,\r\n  },\r\n  inputContainer: {\r\n    marginHorizontal: 30,\r\n    color: \"#000\",\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    borderRadius: 7,\r\n    paddingVertical: 6,\r\n    paddingHorizontal: 10,\r\n    // marginBottom: 20,\r\n    color: \"black\",\r\n    fontSize: 15,\r\n  },\r\n  label: {\r\n    marginBottom: 5,\r\n  },\r\n  bottomView: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  Or: {\r\n    marginTop: 10,\r\n  },\r\n  btn: {\r\n    borderWidth: 1,\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 80,\r\n    backgroundColor: \"#f1c40f\",\r\n    borderRadius: 10,\r\n  },\r\n  lastContainer: {\r\n    display: \"flex\",\r\n    marginTop: 20,\r\n    alignItems: \"center\",\r\n    borderTopWidth: 1,\r\n    marginHorizontal: 30,\r\n    borderColor: \"#000\",\r\n  },\r\n  inputGroup: {\r\n    position: \"relative\",\r\n    marginBottom: 10,\r\n    color: \"#000\",\r\n  },\r\n  icon: {\r\n    position: \"absolute\",\r\n    right: 15,\r\n    top: 15,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}