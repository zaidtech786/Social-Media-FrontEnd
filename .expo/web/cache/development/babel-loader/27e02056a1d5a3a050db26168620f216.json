{"ast":null,"code":"import React, { useContext } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Login from \"./Login\";\nimport SignUp from \"./SignUp\";\nimport Search from \"./Search\";\nimport Profile from \"./Profile\";\nimport Chats from \"./Chats\";\nimport Home from \"./Home\";\nimport Notifications from \"./Notifications\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AuthContext from \"./Context/useContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AppNav = function AppNav() {\n  var _useContext = useContext(AuthContext),\n      isLoading = _useContext.isLoading,\n      userToken = _useContext.userToken;\n\n  if (isLoading) {\n    _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: \"center\"\n      },\n      children: _jsx(ActivityIndicator, {\n        size: large\n      })\n    });\n  }\n\n  return _jsxs(NavigationContainer, {\n    children: [userToken !== null ? _jsx(Home, {}) : _jsx(Login, {}), \"//    \", _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: \"login\",\n      children: [\"//     \", _jsx(Stack.Screen, {\n        name: \"login\",\n        component: Login\n      }), \"//     \", _jsx(Stack.Screen, {\n        name: \"home\",\n        component: Home\n      }), \"//      \", _jsx(Stack.Screen, {\n        name: \"notification\",\n        component: Notifications\n      }), \"//      \", _jsx(Stack.Screen, {\n        name: \"chat\",\n        component: Chats\n      }), \"//     \", _jsx(Stack.Screen, {\n        name: \"profile\",\n        component: Profile\n      }), \"//     \", _jsx(Stack.Screen, {\n        name: \"search\",\n        component: Search\n      }), \"//     \", _jsx(Stack.Screen, {\n        name: \"signup\",\n        component: SignUp\n      }), \"//   \"]\n    })]\n  });\n};\n\nexport default AppNav;","map":{"version":3,"names":["React","useContext","NavigationContainer","createNativeStackNavigator","Login","SignUp","Search","Profile","Chats","Home","Notifications","AuthContext","AppNav","isLoading","userToken","flex","justifyContent","alignItems","large","headerShown"],"sources":["I:/ReactNative/social_media-app/screens/AppNav.js"],"sourcesContent":["import React,{useContext} from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport Login from './Login';\r\nimport SignUp from './SignUp';\r\nimport Search from './Search';\r\nimport Profile from './Profile';\r\nimport Chats from './Chats';\r\nimport Home from './Home';\r\nimport Notifications from \"./Notifications\";\r\nimport { ActivityIndicator,View } from 'react-native';\r\nimport AuthContext from \"./Context/useContext\"\r\n\r\nconst AppNav = () => {\r\n\r\n    const {isLoading,userToken}=useContext(AuthContext);\r\n\r\n    if(isLoading){\r\n          <View style={{flex:1,justifyContent:'center',alignItems:\"center\"}}>\r\n            <ActivityIndicator size={large}/>\r\n          </View>\r\n        }\r\n\r\n    // const Stack = createNativeStackNavigator();\r\n  return (\r\n    <NavigationContainer>\r\n        {\r\n            userToken!==null ? <Home/>:<Login/>}\r\n    //    <Stack.Navigator  screenOptions={{ headerShown: false }} initialRouteName={\"login\"} >\r\n    //     <Stack.Screen name=\"login\" component={Login} />\r\n    //     <Stack.Screen name=\"home\" component={Home} />\r\n    //      <Stack.Screen name=\"notification\" component={Notifications} />\r\n    //      <Stack.Screen name=\"chat\" component={ Chats} />\r\n    //     <Stack.Screen name=\"profile\" component={Profile} />\r\n    //     <Stack.Screen name=\"search\" component={Search} />\r\n    //     <Stack.Screen name=\"signup\" component={SignUp} /> \r\n    //   </Stack.Navigator>\r\n   </NavigationContainer>\r\n  )\r\n}\r\n\r\nexport default AppNav"],"mappings":"AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,OAAOC,aAAP;;;AAEA,OAAOC,WAAP;;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;EAEjB,kBAA4BX,UAAU,CAACU,WAAD,CAAtC;EAAA,IAAOE,SAAP,eAAOA,SAAP;EAAA,IAAiBC,SAAjB,eAAiBA,SAAjB;;EAEA,IAAGD,SAAH,EAAa;IACP,KAAC,IAAD;MAAM,KAAK,EAAE;QAACE,IAAI,EAAC,CAAN;QAAQC,cAAc,EAAC,QAAvB;QAAgCC,UAAU,EAAC;MAA3C,CAAb;MAAA,UACE,KAAC,iBAAD;QAAmB,IAAI,EAAEC;MAAzB;IADF;EAGD;;EAGP,OACE,MAAC,mBAAD;IAAA,WAEQJ,SAAS,KAAG,IAAZ,GAAmB,KAAC,IAAD,KAAnB,GAA2B,KAAC,KAAD,KAFnC,YAGM,MAAC,KAAD,CAAO,SAAP;MAAkB,aAAa,EAAE;QAAEK,WAAW,EAAE;MAAf,CAAjC;MAAyD,gBAAgB,EAAE,OAA3E;MAAA,sBACC,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,OAAnB;QAA2B,SAAS,EAAEf;MAAtC,EADD,aAEC,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,MAAnB;QAA0B,SAAS,EAAEK;MAArC,EAFD,cAGE,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,cAAnB;QAAkC,SAAS,EAAEC;MAA7C,EAHF,cAIE,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,MAAnB;QAA0B,SAAS,EAAGF;MAAtC,EAJF,aAKC,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,SAAnB;QAA6B,SAAS,EAAED;MAAxC,EALD,aAMC,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,QAAnB;QAA4B,SAAS,EAAED;MAAvC,EAND,aAOC,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,QAAnB;QAA4B,SAAS,EAAED;MAAvC,EAPD;IAAA,EAHN;EAAA,EADF;AAeD,CA1BD;;AA4BA,eAAeO,MAAf"},"metadata":{},"sourceType":"module"}