{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AuthContext = createContext({});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userToken = _useState4[0],\n      setUserToken = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userData = _useState6[0],\n      setUserData = _useState6[1];\n\n  var loggedIn = function _callee(userName, password) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fetch(\"http://localhost:5000/api/signin\", {\n              method: \"post\",\n              body: {\n                userName: userName,\n                password: password\n              },\n              headers: {\n                \"content-type\": \"application/json\"\n              }\n            }).then(function (res) {\n              console.log(res);\n              alert(res.data.Message);\n              setUserToken(res.data.token);\n              setUserData(res.data.user);\n              console.log(res.data.user);\n              console.log(userData);\n            }).catch(function (err) {\n              console.log(err);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loggedOut = function loggedOut() {\n    setIsLoading(false);\n    setUserToken(null);\n  };\n\n  return _jsx(AuthContext.Provider, {\n    value: {\n      loggedIn: loggedIn,\n      loggedOut: loggedOut,\n      userToken: userToken,\n      isLoading: isLoading,\n      setUserToken: setUserToken,\n      setUserData: setUserData,\n      userData: userData\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["createContext","useState","axios","AuthContext","AuthProvider","children","isLoading","setIsLoading","userToken","setUserToken","userData","setUserData","loggedIn","userName","password","fetch","method","body","headers","then","res","console","log","alert","data","Message","token","user","catch","err","loggedOut"],"sources":["I:/ReactNative/social_media-app/screens/Context/useContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const AuthContext = createContext({});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [userToken, setUserToken] = useState(null);\r\n  const [userData, setUserData] = useState({});\r\n\r\n  const loggedIn = async (userName, password) => {\r\n    fetch(\"http://localhost:5000/api/signin\", {\r\n      method: \"post\",\r\n      body: {\r\n        userName,\r\n        password,\r\n      },\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        alert(res.data.Message);\r\n        setUserToken(res.data.token);\r\n        setUserData(res.data.user);\r\n        console.log(res.data.user);\r\n        console.log(userData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const loggedOut = () => {\r\n    setIsLoading(false);\r\n    setUserToken(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        loggedIn,\r\n        loggedOut,\r\n        userToken,\r\n        isLoading,\r\n        setUserToken,\r\n        setUserData,\r\n        userData,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,IAAMC,WAAW,GAAGH,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe,OAAkB;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EAC5C,gBAAkCJ,QAAQ,CAAC,IAAD,CAA1C;EAAA;EAAA,IAAOK,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAAkCN,QAAQ,CAAC,IAAD,CAA1C;EAAA;EAAA,IAAOO,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAAgCR,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOS,QAAP;EAAA,IAAiBC,WAAjB;;EAEA,IAAMC,QAAQ,GAAG,iBAAOC,QAAP,EAAiBC,QAAjB;IAAA;MAAA;QAAA;UAAA;YACfC,KAAK,CAAC,kCAAD,EAAqC;cACxCC,MAAM,EAAE,MADgC;cAExCC,IAAI,EAAE;gBACJJ,QAAQ,EAARA,QADI;gBAEJC,QAAQ,EAARA;cAFI,CAFkC;cAMxCI,OAAO,EAAE;gBACP,gBAAgB;cADT;YAN+B,CAArC,CAAL,CAUGC,IAVH,CAUQ,UAACC,GAAD,EAAS;cACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ;cACAG,KAAK,CAACH,GAAG,CAACI,IAAJ,CAASC,OAAV,CAAL;cACAhB,YAAY,CAACW,GAAG,CAACI,IAAJ,CAASE,KAAV,CAAZ;cACAf,WAAW,CAACS,GAAG,CAACI,IAAJ,CAASG,IAAV,CAAX;cACAN,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACI,IAAJ,CAASG,IAArB;cACAN,OAAO,CAACC,GAAR,CAAYZ,QAAZ;YACD,CAjBH,EAkBGkB,KAlBH,CAkBS,UAACC,GAAD,EAAS;cACdR,OAAO,CAACC,GAAR,CAAYO,GAAZ;YACD,CApBH;;UADe;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAjB;;EAwBA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;IACtBvB,YAAY,CAAC,KAAD,CAAZ;IACAE,YAAY,CAAC,IAAD,CAAZ;EACD,CAHD;;EAKA,OACE,KAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MACLG,QAAQ,EAARA,QADK;MAELkB,SAAS,EAATA,SAFK;MAGLtB,SAAS,EAATA,SAHK;MAILF,SAAS,EAATA,SAJK;MAKLG,YAAY,EAAZA,YALK;MAMLE,WAAW,EAAXA,WANK;MAOLD,QAAQ,EAARA;IAPK,CADT;IAAA,UAWGL;EAXH,EADF;AAeD,CAjDM"},"metadata":{},"sourceType":"module"}