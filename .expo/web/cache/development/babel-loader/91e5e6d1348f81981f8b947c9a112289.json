{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Conversation from \"./Conversation\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { AuthContext } from \"./Context/useContext\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Chats() {\n  var _useContext = useContext(AuthContext),\n      userId = _useContext.userId;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      conversations = _useState2[0],\n      setConversations = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentChat = _useState6[0],\n      setCurrentChat = _useState6[1];\n\n  useEffect(function () {\n    var getConversations = function _callee() {\n      var res;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(\"http://192.168.0.106:5000/chat/getconversation/\" + userId));\n\n            case 3:\n              res = _context.sent;\n              console.log(res);\n              setConversations(res.data);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    getConversations();\n  }, [userId]);\n\n  var getFriendData = function getFriendData() {\n    console.log(conversations);\n    var friendId = conversations.forEach(function (m) {\n      return console.log(m);\n    });\n    console.log(friendId);\n  };\n\n  useEffect(function () {\n    getFriendData();\n  }, []);\n  var navigation = useNavigation();\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: \"600\"\n        },\n        children: \"Messages\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"message\");\n        },\n        children: conversations.map(function (c) {\n          return _jsx(View, {\n            onClick: function onClick() {\n              return setCurrentChat(c);\n            },\n            children: _jsx(Conversation, {\n              conversation: c,\n              currentUser: userId\n            })\n          });\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 40,\n    marginLeft: 20\n  },\n  chatSection: {\n    marginTop: 20\n  },\n  img: {\n    width: 50,\n    height: 50,\n    borderRadius: 50\n  }\n});","map":{"version":3,"names":["React","useContext","useEffect","useState","Conversation","useNavigation","AuthContext","axios","Chats","userId","conversations","setConversations","messages","setMessages","currentChat","setCurrentChat","getConversations","get","res","console","log","data","getFriendData","friendId","forEach","m","navigation","styles","container","fontSize","fontWeight","navigate","map","c","StyleSheet","create","marginTop","marginLeft","chatSection","img","width","height","borderRadius"],"sources":["I:/ReactNative/social_media-app/screens/Chats.js"],"sourcesContent":["import { StyleSheet, Text, TouchableOpacity, View, Image } from \"react-native\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Conversation from \"./Conversation\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { AuthContext } from \"./Context/useContext\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Chats() {\r\n  const { userId } = useContext(AuthContext);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getConversations = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          \"http://192.168.0.106:5000/chat/getconversation/\" + userId\r\n        );\r\n        console.log(res);\r\n        setConversations(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getConversations();\r\n  }, [userId]);\r\n\r\n  const getFriendData = () => {\r\n    console.log(conversations);\r\n    const friendId = conversations.forEach((m) => console.log(m));\r\n    console.log(friendId);\r\n    // axios\r\n    //   .get(`http://192.168.0.106:5000/api/profile/${id}`)\r\n    //   .then((res) => {\r\n    //     console.log(\"User Data is : \", res.data);\r\n    //     // setUserInfo(res.data.user);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n  };\r\n  useEffect(() => {\r\n    getFriendData();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const getMessages = async () => {\r\n  //     try {\r\n  //       const res = await axios.get(\r\n  //         \"http://192.168.0.106:5000/chat/getmessage\" + currentChat?._id\r\n  //       );\r\n  //       setMessages(res.data);\r\n  //     } catch (err) {\r\n  //       console.log(err);\r\n  //     }\r\n  //   };\r\n  //   getMessages();\r\n  // }, [currentChat]);\r\n\r\n  // const handleSubmit = async (e) => {\r\n  //   e.preventDefault();\r\n  //   const message = {\r\n  //     sender: user._id,\r\n  //     text: newMessage,\r\n  //     conversationId: currentChat._id,\r\n  //   };\r\n\r\n  const navigation = useNavigation();\r\n  return (\r\n    <View>\r\n      <View style={styles.container}>\r\n        <Text style={{ fontSize: 20, fontWeight: \"600\" }}>Messages</Text>\r\n        <TouchableOpacity onPress={() => navigation.navigate(\"message\")}>\r\n          {conversations.map((c) => (\r\n            <View onClick={() => setCurrentChat(c)}>\r\n              <Conversation conversation={c} currentUser={userId} />\r\n            </View>\r\n          ))}\r\n          {/* <View style={styles.chatSection}>\r\n            <View style={{ flexDirection: \"row\", position: \"relative\" }}>\r\n              <TouchableOpacity>\r\n                <Image\r\n                  source={require(\"../assets/img2.jpeg\")}\r\n                  style={styles.img}\r\n                />\r\n              </TouchableOpacity>\r\n              <Text style={{ marginLeft: 10, fontWeight: \"500\", fontSize: 20 }}>\r\n                Zaid Siddiqui\r\n              </Text>\r\n            </View>\r\n\r\n            <View style={{ position: \"absolute\", top: 25, left: 60 }}>\r\n              <Text>Last Chat Message 2d</Text>\r\n            </View>\r\n          </View> */}\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 40,\r\n    marginLeft: 20,\r\n  },\r\n  chatSection: {\r\n    marginTop: 20,\r\n    // flexDirection:'row',\r\n  },\r\n  img: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n  },\r\n});\r\n"],"mappings":";;;;;;;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,YAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,WAAT;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,KAAT,GAAiB;EAC9B,kBAAmBP,UAAU,CAACK,WAAD,CAA7B;EAAA,IAAQG,MAAR,eAAQA,MAAR;;EACA,gBAA0CN,QAAQ,CAAC,EAAD,CAAlD;EAAA;EAAA,IAAOO,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,iBAAgCR,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOS,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAAsCV,QAAQ,CAAC,EAAD,CAA9C;EAAA;EAAA,IAAOW,WAAP;EAAA,IAAoBC,cAApB;;EAEAb,SAAS,CAAC,YAAM;IACd,IAAMc,gBAAgB,GAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,iCAEHT,KAAK,CAACU,GAAN,CAChB,oDAAoDR,MADpC,CAFG;;YAAA;cAEfS,GAFe;cAKrBC,OAAO,CAACC,GAAR,CAAYF,GAAZ;cACAP,gBAAgB,CAACO,GAAG,CAACG,IAAL,CAAhB;cANqB;cAAA;;YAAA;cAAA;cAAA;cAQrBF,OAAO,CAACC,GAAR;;YARqB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAzB;;IAWAJ,gBAAgB;EACjB,CAbQ,EAaN,CAACP,MAAD,CAbM,CAAT;;EAeA,IAAMa,aAAa,GAAG,SAAhBA,aAAgB,GAAM;IAC1BH,OAAO,CAACC,GAAR,CAAYV,aAAZ;IACA,IAAMa,QAAQ,GAAGb,aAAa,CAACc,OAAd,CAAsB,UAACC,CAAD;MAAA,OAAON,OAAO,CAACC,GAAR,CAAYK,CAAZ,CAAP;IAAA,CAAtB,CAAjB;IACAN,OAAO,CAACC,GAAR,CAAYG,QAAZ;EAUD,CAbD;;EAcArB,SAAS,CAAC,YAAM;IACdoB,aAAa;EACd,CAFQ,EAEN,EAFM,CAAT;EA0BA,IAAMI,UAAU,GAAGrB,aAAa,EAAhC;EACA,OACE,KAAC,IAAD;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAEsB,MAAM,CAACC,SAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAE;UAAEC,QAAQ,EAAE,EAAZ;UAAgBC,UAAU,EAAE;QAA5B,CAAb;QAAA;MAAA,EADF,EAEE,KAAC,gBAAD;QAAkB,OAAO,EAAE;UAAA,OAAMJ,UAAU,CAACK,QAAX,CAAoB,SAApB,CAAN;QAAA,CAA3B;QAAA,UACGrB,aAAa,CAACsB,GAAd,CAAkB,UAACC,CAAD;UAAA,OACjB,KAAC,IAAD;YAAM,OAAO,EAAE;cAAA,OAAMlB,cAAc,CAACkB,CAAD,CAApB;YAAA,CAAf;YAAA,UACE,KAAC,YAAD;cAAc,YAAY,EAAEA,CAA5B;cAA+B,WAAW,EAAExB;YAA5C;UADF,EADiB;QAAA,CAAlB;MADH,EAFF;IAAA;EADF,EADF;AA+BD;AAED,IAAMkB,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC/BP,SAAS,EAAE;IACTQ,SAAS,EAAE,EADF;IAETC,UAAU,EAAE;EAFH,CADoB;EAK/BC,WAAW,EAAE;IACXF,SAAS,EAAE;EADA,CALkB;EAS/BG,GAAG,EAAE;IACHC,KAAK,EAAE,EADJ;IAEHC,MAAM,EAAE,EAFL;IAGHC,YAAY,EAAE;EAHX;AAT0B,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}