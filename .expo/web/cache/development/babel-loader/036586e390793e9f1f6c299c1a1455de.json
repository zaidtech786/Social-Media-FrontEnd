{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState, useRef, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { io } from \"socket.io-client\";\nimport { AuthContext } from \"./Context/useContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Conversation = function Conversation(_ref) {\n  var conversation = _ref.conversation,\n      currentUser = _ref.currentUser,\n      msg = _ref.msg;\n\n  var _useContext = useContext(AuthContext),\n      userInfo = _useContext.userInfo;\n\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      friendId = _useState4[0],\n      setFriendId = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      arrivalMessage = _useState8[0],\n      setArrivalMessage = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      onlineUsers = _useState10[0],\n      setOnlineUsers = _useState10[1];\n\n  var socket = useRef();\n  useEffect(function () {\n    var friendId = conversation.members.find(function (m) {\n      return m !== currentUser;\n    });\n    setFriendId(friendId);\n    console.log(\"Friend \", friendId);\n\n    var getUser = function _callee() {\n      var res;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(\"http://192.168.0.105:5000/api/profile/\" + friendId));\n\n            case 3:\n              res = _context.sent;\n              setUser(res.data.user);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    getUser();\n  }, [currentUser, conversation]);\n\n  var getMessages = function _callee2(conversationId) {\n    var res;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"conversationId\", conversationId);\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(\"http://192.168.0.105:5000/chat/getmessage/\" + conversationId));\n\n          case 4:\n            res = _context2.sent;\n            console.log(res);\n            setMessages(res.data);\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      style: styles.chatSection,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"message\", {\n            conversationId: conversation._id,\n            friendId: friendId\n          });\n          getMessages(conversation._id);\n        },\n        children: _jsxs(View, {\n          style: styles.userProfile,\n          children: [_jsx(Image, {\n            source: {\n              uri: user == null ? void 0 : user.profile\n            },\n            style: styles.profile\n          }), _jsxs(View, {\n            style: styles.nameUser,\n            children: [_jsx(Text, {\n              style: {\n                fontWeight: \"400\",\n                fontSize: 18\n              },\n              children: user == null ? void 0 : user.name\n            }), _jsx(Text, {\n              style: {\n                fontWeight: \"500\"\n              },\n              children: user == null ? void 0 : user.userName\n            })]\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default Conversation;\nvar styles = StyleSheet.create({\n  img: {\n    width: 50,\n    height: 50,\n    borderRadius: 50\n  },\n  userProfile: {\n    marginLeft: 20,\n    marginTop: 20,\n    flexDirection: \"row\"\n  },\n  nameUser: {\n    marginLeft: 10\n  },\n  profile: {\n    width: 40,\n    height: 40,\n    borderRadius: 50,\n    borderWidth: 1,\n    borderColor: \"#000\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","useRef","useContext","axios","useNavigation","io","AuthContext","Conversation","conversation","currentUser","msg","userInfo","navigation","messages","setMessages","friendId","setFriendId","user","setUser","arrivalMessage","setArrivalMessage","onlineUsers","setOnlineUsers","socket","members","find","m","console","log","getUser","get","res","data","getMessages","conversationId","styles","chatSection","navigate","_id","userProfile","uri","profile","nameUser","fontWeight","fontSize","name","userName","StyleSheet","create","img","width","height","borderRadius","marginLeft","marginTop","flexDirection","borderWidth","borderColor"],"sources":["I:/ReactNative/social_media-app/screens/Conversation.js"],"sourcesContent":["import { Image, StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport React, { useEffect, useState, useRef, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { io } from \"socket.io-client\";\r\nimport { AuthContext } from \"./Context/useContext\";\r\n\r\nconst Conversation = ({ conversation, currentUser, msg }) => {\r\n  const { userInfo } = useContext(AuthContext);\r\n  const navigation = useNavigation();\r\n  const [messages, setMessages] = useState([]);\r\n  const [friendId, setFriendId] = useState([]);\r\n  const [user, setUser] = useState([]);\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const socket = useRef();\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"MSG\", msg);\r\n  //   socket.current = io(\"ws://localhost:3000\");\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   arrivalMessage &&\r\n  //     conversation?.members.includes(arrivalMessage.sender) &&\r\n  //     setMessages((prev) => [...prev, arrivalMessage]);\r\n  // }, [arrivalMessage, conversation]);\r\n\r\n  // useEffect(() => {\r\n  //   socket.current.emit(\"addUser\", currentUser);\r\n  //   socket.current.on(\"getUsers\", (users) => {\r\n  //     setOnlineUsers(\r\n  //       userInfo.followings.filter((f) => users.some((u) => u.userId === f))\r\n  //     );\r\n  //   });\r\n  // }, [userInfo]);\r\n\r\n  // const receiverId = conversation.members.find(\r\n  //   (member) => member !== currentUser\r\n  // );\r\n\r\n  //\r\n\r\n  useEffect(() => {\r\n    const friendId = conversation.members.find((m) => m !== currentUser);\r\n    setFriendId(friendId);\r\n    console.log(\"Friend \", friendId);\r\n\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          `http://192.168.0.105:5000/api/profile/${friendId}`\r\n        );\r\n        setUser(res.data.user);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [currentUser, conversation]);\r\n\r\n  const getMessages = async (conversationId) => {\r\n    console.log(\"conversationId\", conversationId);\r\n    try {\r\n      const res = await axios.get(\r\n        `http://192.168.0.105:5000/chat/getmessage/${conversationId}`\r\n      );\r\n      console.log(res);\r\n      setMessages(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.chatSection}>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            navigation.navigate(\"message\", {\r\n              conversationId: conversation._id,\r\n              friendId: friendId,\r\n            });\r\n            getMessages(conversation._id);\r\n          }}\r\n        >\r\n          <View style={styles.userProfile}>\r\n            <Image\r\n              source={{\r\n                uri: user?.profile,\r\n              }}\r\n              style={styles.profile}\r\n            />\r\n            <View style={styles.nameUser}>\r\n              <Text style={{ fontWeight: \"400\", fontSize: 18 }}>\r\n                {user?.name}\r\n              </Text>\r\n              <Text style={{ fontWeight: \"500\" }}>{user?.userName}</Text>\r\n            </View>\r\n          </View>\r\n          {/* <View style={{ flexDirection: \"row\" }}>\r\n            <Image source={{ uri: user?.profile }} style={styles.img} />\r\n            <Text style={{ marginLeft: 10, fontWeight: \"500\", fontSize: 20 }}>\r\n              {user?.name}\r\n            </Text>\r\n          </View> */}\r\n        </TouchableOpacity>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Conversation;\r\n\r\nconst styles = StyleSheet.create({\r\n  // chatSection: {\r\n  //   marginTop: 20,\r\n  //   marginLeft: 20,\r\n  // },\r\n  img: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n  },\r\n  userProfile: {\r\n    marginLeft: 20,\r\n    marginTop: 20,\r\n    flexDirection: \"row\",\r\n  },\r\n  nameUser: {\r\n    marginLeft: 10,\r\n  },\r\n  profile: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 50,\r\n    borderWidth: 1,\r\n    borderColor: \"#000\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}