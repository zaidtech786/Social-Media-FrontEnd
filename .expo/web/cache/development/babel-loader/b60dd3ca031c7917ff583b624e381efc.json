{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Logout from \"@expo/vector-icons/AntDesign\";\nimport Chat from \"@expo/vector-icons/Ionicons\";\nimport AddPostIcon from \"@expo/vector-icons/Ionicons\";\nimport { AuthContext } from \"./../Context/useContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Navbar = function Navbar() {\n  var _useContext = useContext(AuthContext),\n      dispatch = _useContext.dispatch;\n\n  var navigation = useNavigation();\n\n  var loggedOut = function _callee() {\n    var clearLs;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            clearLs = AsyncStorage.clear();\n\n            if (clearLs) {\n              navigation.navigate(\"login\");\n            } else {\n              alert(\"Storage is not cleared\");\n              navigation.navigate(\"home\");\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(View, {\n    style: styles.navbar,\n    children: _jsxs(View, {\n      style: styles.nav,\n      children: [_jsx(Text, {\n        style: styles.logo,\n        children: \"chattify\"\n      }), _jsxs(Text, {\n        style: styles.chatIcon,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"upload\");\n          },\n          children: _jsx(AddPostIcon, {\n            name: \"add-circle\",\n            size: 30,\n            style: {\n              paddingHorizontal: 10\n            }\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"chat\");\n          },\n          children: _jsx(Chat, {\n            name: \"md-chatbubble-ellipses-outline\",\n            size: 30\n          })\n        }), _jsx(TouchableOpacity, {\n          children: _jsx(Logout, {\n            name: \"logout\",\n            size: 30,\n            onPress: function onPress() {\n              return loggedOut();\n            }\n          })\n        })]\n      })]\n    })\n  });\n};\n\nexport default Navbar;\nvar styles = StyleSheet.create({\n  navbar: {\n    paddingTop: 35,\n    width: \"100%\",\n    height: 100,\n    backgroundColor: \"#f1c40f\"\n  },\n  nav: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  logo: {\n    fontSize: 25,\n    marginLeft: 20,\n    marginTop: 12\n  },\n  chatIcon: {\n    marginRight: 20,\n    marginTop: 12\n  }\n});","map":{"version":3,"names":["React","useContext","useNavigation","AsyncStorage","Logout","Chat","AddPostIcon","AuthContext","Navbar","dispatch","navigation","loggedOut","clearLs","clear","navigate","alert","styles","navbar","nav","logo","chatIcon","paddingHorizontal","StyleSheet","create","paddingTop","width","height","backgroundColor","display","justifyContent","flexDirection","alignItems","fontSize","marginLeft","marginTop","marginRight"],"sources":["I:/ReactNative/social_media-app/screens/HomeComponents/Navbar.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { StyleSheet, Text, View, TouchableOpacity, Alert } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport Logout from \"react-native-vector-icons/AntDesign\";\r\nimport Chat from \"react-native-vector-icons/Ionicons\";\r\nimport AddPostIcon from \"react-native-vector-icons/Ionicons\";\r\nimport { AuthContext } from \"./../Context/useContext\";\r\n\r\nconst Navbar = () => {\r\n  const { dispatch } = useContext(AuthContext);\r\n  const navigation = useNavigation();\r\n  const loggedOut = async () => {\r\n    const clearLs = AsyncStorage.clear();\r\n    if (clearLs) {\r\n      navigation.navigate(\"login\");\r\n    } else {\r\n      alert(\"Storage is not cleared\");\r\n      navigation.navigate(\"home\");\r\n    }\r\n  };\r\n  return (\r\n    <View style={styles.navbar}>\r\n      <View style={styles.nav}>\r\n        <Text style={styles.logo}>chattify</Text>\r\n        <Text style={styles.chatIcon}>\r\n          <TouchableOpacity onPress={() => navigation.navigate(\"upload\")}>\r\n            <AddPostIcon\r\n              name=\"add-circle\"\r\n              size={30}\r\n              style={{ paddingHorizontal: 10 }}\r\n            />\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity onPress={() => navigation.navigate(\"chat\")}>\r\n            <Chat name=\"md-chatbubble-ellipses-outline\" size={30} />\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity>\r\n            <Logout name=\"logout\" size={30} onPress={() => loggedOut()} />\r\n          </TouchableOpacity>\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\nconst styles = StyleSheet.create({\r\n  navbar: {\r\n    paddingTop: 35,\r\n    width: \"100%\",\r\n    height: 100,\r\n    backgroundColor: \"#f1c40f\",\r\n  },\r\n  nav: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  logo: {\r\n    fontSize: 25,\r\n    marginLeft: 20,\r\n    marginTop: 12,\r\n  },\r\n  chatIcon: {\r\n    marginRight: 20,\r\n    marginTop: 12,\r\n  },\r\n\r\n  //   innerCont: {\r\n  //     marginTop: 20,\r\n  //     marginLeft: 20,\r\n  //     flexDirection: \"row\",\r\n  //   },\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,WAAP;AACA,SAASC,WAAT;;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;EACnB,kBAAqBP,UAAU,CAACM,WAAD,CAA/B;EAAA,IAAQE,QAAR,eAAQA,QAAR;;EACA,IAAMC,UAAU,GAAGR,aAAa,EAAhC;;EACA,IAAMS,SAAS,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YACVC,OADU,GACAT,YAAY,CAACU,KAAb,EADA;;YAEhB,IAAID,OAAJ,EAAa;cACXF,UAAU,CAACI,QAAX,CAAoB,OAApB;YACD,CAFD,MAEO;cACLC,KAAK,CAAC,wBAAD,CAAL;cACAL,UAAU,CAACI,QAAX,CAAoB,MAApB;YACD;;UAPe;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAlB;;EASA,OACE,KAAC,IAAD;IAAM,KAAK,EAAEE,MAAM,CAACC,MAApB;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,GAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAEF,MAAM,CAACG,IAApB;QAAA;MAAA,EADF,EAEE,MAAC,IAAD;QAAM,KAAK,EAAEH,MAAM,CAACI,QAApB;QAAA,WACE,KAAC,gBAAD;UAAkB,OAAO,EAAE;YAAA,OAAMV,UAAU,CAACI,QAAX,CAAoB,QAApB,CAAN;UAAA,CAA3B;UAAA,UACE,KAAC,WAAD;YACE,IAAI,EAAC,YADP;YAEE,IAAI,EAAE,EAFR;YAGE,KAAK,EAAE;cAAEO,iBAAiB,EAAE;YAArB;UAHT;QADF,EADF,EASE,KAAC,gBAAD;UAAkB,OAAO,EAAE;YAAA,OAAMX,UAAU,CAACI,QAAX,CAAoB,MAApB,CAAN;UAAA,CAA3B;UAAA,UACE,KAAC,IAAD;YAAM,IAAI,EAAC,gCAAX;YAA4C,IAAI,EAAE;UAAlD;QADF,EATF,EAaE,KAAC,gBAAD;UAAA,UACE,KAAC,MAAD;YAAQ,IAAI,EAAC,QAAb;YAAsB,IAAI,EAAE,EAA5B;YAAgC,OAAO,EAAE;cAAA,OAAMH,SAAS,EAAf;YAAA;UAAzC;QADF,EAbF;MAAA,EAFF;IAAA;EADF,EADF;AAwBD,CApCD;;AAsCA,eAAeH,MAAf;AAEA,IAAMQ,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;EAC/BN,MAAM,EAAE;IACNO,UAAU,EAAE,EADN;IAENC,KAAK,EAAE,MAFD;IAGNC,MAAM,EAAE,GAHF;IAINC,eAAe,EAAE;EAJX,CADuB;EAO/BT,GAAG,EAAE;IACHU,OAAO,EAAE,MADN;IAEHC,cAAc,EAAE,eAFb;IAGHC,aAAa,EAAE,KAHZ;IAIHC,UAAU,EAAE;EAJT,CAP0B;EAa/BZ,IAAI,EAAE;IACJa,QAAQ,EAAE,EADN;IAEJC,UAAU,EAAE,EAFR;IAGJC,SAAS,EAAE;EAHP,CAbyB;EAkB/Bd,QAAQ,EAAE;IACRe,WAAW,EAAE,EADL;IAERD,SAAS,EAAE;EAFH;AAlBqB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}