{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { AsyncStorage } from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AuthContext = createContext({});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userToken = _useState4[0],\n      setUserToken = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userData = _useState6[0],\n      setUserData = _useState6[1];\n\n  var loggedIn = function _callee(userName, password) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fetch(\"http://localhost:5000/api/signin\", {\n              method: \"post\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                userName: userName,\n                password: password\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (data) {\n              console.log(\"YOur data is : \", data);\n              alert(data.Message);\n              AsyncStorage.setItem(\"token\", data.token);\n              AsyncStorage.setItem((\"userData\", data.user));\n            });\n            getData();\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getData = function _callee2() {\n    var token, user;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n          case 2:\n            token = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userData\"));\n\n          case 5:\n            user = _context2.sent;\n            console.log(\"Async token is\", token);\n            console.log(\"Async user is\", user);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loggedOut = function loggedOut() {\n    setIsLoading(false);\n    setUserToken(null);\n  };\n\n  return _jsx(AuthContext.Provider, {\n    value: {\n      loggedIn: loggedIn,\n      loggedOut: loggedOut,\n      userToken: userToken,\n      isLoading: isLoading,\n      setUserToken: setUserToken,\n      setUserData: setUserData,\n      userData: userData\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["createContext","useState","axios","AsyncStorage","AuthContext","AuthProvider","children","isLoading","setIsLoading","userToken","setUserToken","userData","setUserData","loggedIn","userName","password","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","alert","Message","setItem","token","user","getData","getItem","loggedOut"],"sources":["I:/ReactNative/social_media-app/screens/Context/useContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AsyncStorage } from \"@react-native-async-storage/async-storage\";\r\n\r\nexport const AuthContext = createContext({});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [userToken, setUserToken] = useState(null);\r\n  const [userData, setUserData] = useState({});\r\n\r\n  const loggedIn = async (userName, password) => {\r\n    fetch(\"http://localhost:5000/api/signin\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        userName,\r\n        password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(\"YOur data is : \", data);\r\n        alert(data.Message);\r\n        AsyncStorage.setItem(\"token\", data.token);\r\n        AsyncStorage.setItem((\"userData\", data.user));\r\n      });\r\n    getData();\r\n  };\r\n\r\n  const getData = async () => {\r\n    let token = await AsyncStorage.getItem(\"token\");\r\n    let user = await AsyncStorage.getItem(\"userData\");\r\n    console.log(\"Async token is\", token);\r\n    console.log(\"Async user is\", user);\r\n  };\r\n\r\n  const loggedOut = () => {\r\n    setIsLoading(false);\r\n    setUserToken(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        loggedIn,\r\n        loggedOut,\r\n        userToken,\r\n        isLoading,\r\n        setUserToken,\r\n        setUserData,\r\n        userData,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,2CAA7B;;AAEA,OAAO,IAAMC,WAAW,GAAGJ,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,OAAkB;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EAC5C,gBAAkCL,QAAQ,CAAC,IAAD,CAA1C;EAAA;EAAA,IAAOM,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAAkCP,QAAQ,CAAC,IAAD,CAA1C;EAAA;EAAA,IAAOQ,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAAgCT,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOU,QAAP;EAAA,IAAiBC,WAAjB;;EAEA,IAAMC,QAAQ,GAAG,iBAAOC,QAAP,EAAiBC,QAAjB;IAAA;MAAA;QAAA;UAAA;YACfC,KAAK,CAAC,kCAAD,EAAqC;cACxCC,MAAM,EAAE,MADgC;cAExCC,OAAO,EAAE;gBACP,gBAAgB;cADT,CAF+B;cAKxCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;gBACnBP,QAAQ,EAARA,QADmB;gBAEnBC,QAAQ,EAARA;cAFmB,CAAf;YALkC,CAArC,CAAL,CAUGO,IAVH,CAUQ,UAACC,GAAD;cAAA,OAASA,GAAG,CAACC,IAAJ,EAAT;YAAA,CAVR,EAWGF,IAXH,CAWQ,UAACG,IAAD,EAAU;cACdC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,IAA/B;cACAG,KAAK,CAACH,IAAI,CAACI,OAAN,CAAL;cACA1B,YAAY,CAAC2B,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACM,KAAnC;cACA5B,YAAY,CAAC2B,OAAb,EAAsB,YAAYL,IAAI,CAACO,IAAvC;YACD,CAhBH;YAiBAC,OAAO;;UAlBQ;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAjB;;EAqBA,IAAMA,OAAO,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACI9B,YAAY,CAAC+B,OAAb,CAAqB,OAArB,CADJ;;UAAA;YACVH,KADU;YAAA;YAAA,iCAEG5B,YAAY,CAAC+B,OAAb,CAAqB,UAArB,CAFH;;UAAA;YAEVF,IAFU;YAGdN,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BI,KAA9B;YACAL,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BK,IAA7B;;UAJc;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAhB;;EAOA,IAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;IACtB3B,YAAY,CAAC,KAAD,CAAZ;IACAE,YAAY,CAAC,IAAD,CAAZ;EACD,CAHD;;EAKA,OACE,KAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MACLG,QAAQ,EAARA,QADK;MAELsB,SAAS,EAATA,SAFK;MAGL1B,SAAS,EAATA,SAHK;MAILF,SAAS,EAATA,SAJK;MAKLG,YAAY,EAAZA,YALK;MAMLE,WAAW,EAAXA,WANK;MAOLD,QAAQ,EAARA;IAPK,CADT;IAAA,UAWGL;EAXH,EADF;AAeD,CArDM"},"metadata":{},"sourceType":"module"}