{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport SecureStorage, { ACCESS_CONTROL, ACCESSIBLE, AUTHENTICATION_TYPE } from \"react-native-secure-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AuthContext = createContext({});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userToken = _useState4[0],\n      setUserToken = _useState4[1];\n\n  var loggedIn = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(false);\n            axios.post(\"http://localhost:5000/api/signin\", {});\n            SecureStorage.setItem(\"token\", JSON.stringify());\n            setUserToken(\"zaidboltechote\");\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loggedOut = function loggedOut() {\n    setIsLoading(false);\n    setUserToken(null);\n  };\n\n  return _jsx(AuthContext.Provider, {\n    value: {\n      loggedIn: loggedIn,\n      loggedOut: loggedOut,\n      userToken: userToken,\n      isLoading: isLoading,\n      setUserToken: setUserToken\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["createContext","useState","axios","SecureStorage","ACCESS_CONTROL","ACCESSIBLE","AUTHENTICATION_TYPE","AuthContext","AuthProvider","children","isLoading","setIsLoading","userToken","setUserToken","loggedIn","post","setItem","JSON","stringify","loggedOut"],"sources":["I:/ReactNative/social_media-app/screens/Context/useContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport SecureStorage, {\r\n  ACCESS_CONTROL,\r\n  ACCESSIBLE,\r\n  AUTHENTICATION_TYPE,\r\n} from \"react-native-secure-storage\";\r\n\r\nexport const AuthContext = createContext({});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [userToken, setUserToken] = useState(null);\r\n\r\n  const loggedIn = async () => {\r\n    setIsLoading(false);\r\n    axios.post(\"http://localhost:5000/api/signin\", {});\r\n    SecureStorage.setItem(\"token\", JSON.stringify());\r\n    setUserToken(\"zaidboltechote\");\r\n  };\r\n\r\n  const loggedOut = () => {\r\n    setIsLoading(false);\r\n    setUserToken(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ loggedIn, loggedOut, userToken, isLoading, setUserToken }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,IACEC,cADF,EAEEC,UAFF,EAGEC,mBAHF,QAIO,6BAJP;;AAMA,OAAO,IAAMC,WAAW,GAAGP,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,IAAMQ,YAAY,GAAG,SAAfA,YAAe,OAAkB;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EAC5C,gBAAkCR,QAAQ,CAAC,IAAD,CAA1C;EAAA;EAAA,IAAOS,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAAkCV,QAAQ,CAAC,IAAD,CAA1C;EAAA;EAAA,IAAOW,SAAP;EAAA,IAAkBC,YAAlB;;EAEA,IAAMC,QAAQ,GAAG;IAAA;MAAA;QAAA;UAAA;YACfH,YAAY,CAAC,KAAD,CAAZ;YACAT,KAAK,CAACa,IAAN,CAAW,kCAAX,EAA+C,EAA/C;YACAZ,aAAa,CAACa,OAAd,CAAsB,OAAtB,EAA+BC,IAAI,CAACC,SAAL,EAA/B;YACAL,YAAY,CAAC,gBAAD,CAAZ;;UAJe;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAjB;;EAOA,IAAMM,SAAS,GAAG,SAAZA,SAAY,GAAM;IACtBR,YAAY,CAAC,KAAD,CAAZ;IACAE,YAAY,CAAC,IAAD,CAAZ;EACD,CAHD;;EAKA,OACE,KAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MAAEC,QAAQ,EAARA,QAAF;MAAYK,SAAS,EAATA,SAAZ;MAAuBP,SAAS,EAATA,SAAvB;MAAkCF,SAAS,EAATA,SAAlC;MAA6CG,YAAY,EAAZA;IAA7C,CADT;IAAA,UAGGJ;EAHH,EADF;AAOD,CAvBM"},"metadata":{},"sourceType":"module"}