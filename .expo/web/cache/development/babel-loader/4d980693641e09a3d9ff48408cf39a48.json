{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Conversation = function Conversation(_ref) {\n  var conversation = _ref.conversation,\n      currentUser = _ref.currentUser;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  useEffect(function () {\n    var friendId = conversation.members.find(function (m) {\n      return m !== currentUser;\n    });\n    console.log(friendId);\n\n    var getUser = function _callee() {\n      var res;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios(\"http://192.168.0.106:5000/api/profile/\" + friendId));\n\n            case 3:\n              res = _context.sent;\n              setUser(res.data);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    getUser();\n  }, [currentUser, conversation]);\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \"Con\"\n    })\n  });\n};\n\nexport default Conversation;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useEffect","useState","axios","Conversation","conversation","currentUser","user","setUser","friendId","members","find","m","console","log","getUser","res","data","styles","StyleSheet","create"],"sources":["I:/ReactNative/social_media-app/screens/Conversation.js"],"sourcesContent":["import { StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Conversation = ({ conversation, currentUser }) => {\r\n  const [user, setUser] = useState(null);\r\n  useEffect(() => {\r\n    const friendId = conversation.members.find((m) => m !== currentUser);\r\n    console.log(friendId);\r\n\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios(\r\n          `http://192.168.0.106:5000/api/profile/${friendId}`\r\n        );\r\n        setUser(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [currentUser, conversation]);\r\n\r\n  return (\r\n    <View>\r\n      <Text>Con</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Conversation;\r\n\r\nconst styles = StyleSheet.create({});\r\n"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAmC;EAAA,IAAhCC,YAAgC,QAAhCA,YAAgC;EAAA,IAAlBC,WAAkB,QAAlBA,WAAkB;;EACtD,gBAAwBJ,QAAQ,CAAC,IAAD,CAAhC;EAAA;EAAA,IAAOK,IAAP;EAAA,IAAaC,OAAb;;EACAP,SAAS,CAAC,YAAM;IACd,IAAMQ,QAAQ,GAAGJ,YAAY,CAACK,OAAb,CAAqBC,IAArB,CAA0B,UAACC,CAAD;MAAA,OAAOA,CAAC,KAAKN,WAAb;IAAA,CAA1B,CAAjB;IACAO,OAAO,CAACC,GAAR,CAAYL,QAAZ;;IAEA,IAAMM,OAAO,GAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,iCAEMZ,KAAK,4CACoBM,QADpB,CAFX;;YAAA;cAENO,GAFM;cAKZR,OAAO,CAACQ,GAAG,CAACC,IAAL,CAAP;cALY;cAAA;;YAAA;cAAA;cAAA;cAOZJ,OAAO,CAACC,GAAR;;YAPY;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAhB;;IAUAC,OAAO;EACR,CAfQ,EAeN,CAACT,WAAD,EAAcD,YAAd,CAfM,CAAT;EAiBA,OACE,KAAC,IAAD;IAAA,UACE,KAAC,IAAD;MAAA;IAAA;EADF,EADF;AAKD,CAxBD;;AA0BA,eAAeD,YAAf;AAEA,IAAMc,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf"},"metadata":{},"sourceType":"module"}