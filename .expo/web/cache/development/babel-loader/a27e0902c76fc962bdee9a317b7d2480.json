{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { io } from \"socket.io-client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Conversation = function Conversation(_ref) {\n  var conversation = _ref.conversation,\n      currentUser = _ref.currentUser,\n      msg = _ref.msg;\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      friendId = _useState4[0],\n      setFriendId = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      arrivalMessage = _useState8[0],\n      setArrivalMessage = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      socket = _useState10[0],\n      setSocket = _useState10[1];\n\n  useEffect(function () {\n    socket.current = io(\"ws://localhost:3000\");\n    socket.current.on(\"getMessage\", function (data) {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, []);\n  useEffect(function () {\n    arrivalMessage && (conversation == null ? void 0 : conversation.members.includes(arrivalMessage.sender)) && setMessages(function (prev) {\n      return [].concat(_toConsumableArray(prev), [arrivalMessage]);\n    });\n  }, [arrivalMessage, conversation]);\n  useEffect(function () {\n    socket.current.emit(\"addUser\", currentUser);\n    socket.current.on(\"getUsers\", function (users) {\n      setOnlineUsers(user.followings.filter(function (f) {\n        return users.some(function (u) {\n          return u.userId === f;\n        });\n      }));\n    });\n  }, [user]);\n  var receiverId = conversation.members.find(function (member) {\n    return member !== currentUser;\n  });\n  socket.current.emit(\"sendMessage\", {\n    senderId: currentUser,\n    receiverId: receiverId,\n    text: msg\n  });\n  useEffect(function () {\n    var friendId = conversation.members.find(function (m) {\n      return m !== currentUser;\n    });\n    setFriendId(friendId);\n    console.log(\"Friend \", friendId);\n\n    var getUser = function _callee() {\n      var res;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios(\"http://192.168.0.106:5000/api/profile/\" + friendId));\n\n            case 3:\n              res = _context.sent;\n              setUser(res.data.user);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    getUser();\n  }, [currentUser, conversation]);\n\n  var getMessages = function _callee2(conversationId) {\n    var res;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"conversationId\", conversationId);\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(\"http://192.168.0.106:5000/chat/getmessage/\" + conversationId));\n\n          case 4:\n            res = _context2.sent;\n            console.log(res);\n            setMessages(res.data);\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n\n  return _jsx(View, {\n    children: _jsx(View, {\n      style: styles.chatSection,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"message\", {\n            conversationId: conversation._id,\n            friendId: friendId\n          });\n          getMessages(conversation._id);\n        },\n        children: _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            position: \"relative\"\n          },\n          children: [_jsx(Image, {\n            source: {\n              uri: user.profile\n            },\n            style: styles.img\n          }), _jsx(Text, {\n            style: {\n              marginLeft: 10,\n              fontWeight: \"500\",\n              fontSize: 20\n            },\n            children: user.name\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default Conversation;\nvar styles = StyleSheet.create({\n  chatSection: {\n    marginTop: 20\n  },\n  img: {\n    width: 50,\n    height: 50,\n    borderRadius: 50\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigation","io","Conversation","conversation","currentUser","msg","navigation","messages","setMessages","friendId","setFriendId","user","setUser","arrivalMessage","setArrivalMessage","socket","setSocket","current","on","data","sender","senderId","text","createdAt","Date","now","members","includes","prev","emit","users","setOnlineUsers","followings","filter","f","some","u","userId","receiverId","find","member","m","console","log","getUser","res","getMessages","conversationId","get","styles","chatSection","navigate","_id","flexDirection","position","uri","profile","img","marginLeft","fontWeight","fontSize","name","StyleSheet","create","marginTop","width","height","borderRadius"],"sources":["I:/ReactNative/social_media-app/screens/Conversation.js"],"sourcesContent":["import { Image, StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst Conversation = ({ conversation, currentUser, msg }) => {\r\n  const navigation = useNavigation();\r\n  const [messages, setMessages] = useState([]);\r\n  const [friendId, setFriendId] = useState([]);\r\n  const [user, setUser] = useState([]);\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [socket, setSocket] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    socket.current = io(\"ws://localhost:3000\");\r\n    socket.current.on(\"getMessage\", (data) => {\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      conversation?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, conversation]);\r\n\r\n  useEffect(() => {\r\n    socket.current.emit(\"addUser\", currentUser);\r\n    socket.current.on(\"getUsers\", (users) => {\r\n      setOnlineUsers(\r\n        user.followings.filter((f) => users.some((u) => u.userId === f))\r\n      );\r\n    });\r\n  }, [user]);\r\n\r\n  const receiverId = conversation.members.find(\r\n    (member) => member !== currentUser\r\n  );\r\n\r\n  socket.current.emit(\"sendMessage\", {\r\n    senderId: currentUser,\r\n    receiverId,\r\n    text: msg,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const friendId = conversation.members.find((m) => m !== currentUser);\r\n    setFriendId(friendId);\r\n    console.log(\"Friend \", friendId);\r\n\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios(\r\n          `http://192.168.0.106:5000/api/profile/${friendId}`\r\n        );\r\n        setUser(res.data.user);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [currentUser, conversation]);\r\n\r\n  const getMessages = async (conversationId) => {\r\n    console.log(\"conversationId\", conversationId);\r\n    try {\r\n      const res = await axios.get(\r\n        `http://192.168.0.106:5000/chat/getmessage/${conversationId}`\r\n      );\r\n      console.log(res);\r\n      setMessages(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <View style={styles.chatSection}>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            navigation.navigate(\"message\", {\r\n              conversationId: conversation._id,\r\n              friendId: friendId,\r\n            });\r\n            getMessages(conversation._id);\r\n          }}\r\n        >\r\n          <View style={{ flexDirection: \"row\", position: \"relative\" }}>\r\n            <Image source={{ uri: user.profile }} style={styles.img} />\r\n            <Text style={{ marginLeft: 10, fontWeight: \"500\", fontSize: 20 }}>\r\n              {user.name}\r\n            </Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Conversation;\r\n\r\nconst styles = StyleSheet.create({\r\n  chatSection: {\r\n    marginTop: 20,\r\n    // flexDirection:'row',\r\n  },\r\n  img: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}